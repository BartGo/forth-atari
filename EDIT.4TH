59 CLEAR ( CONST #HLP = 59 )
  0 P ( EDIT - HELP ) -->
  2 P Arrows, Insert, BckSpc: standard
  3 P Return: next line;  Tab: tab (2)
  4 P Clear: clear screen (Shf> Ctl>)
  5 P Esc-Z: undo scr chng (empty-buf)
  6 P Shf-Ins: insert whole line*
  7 P Shf-Del: delete whole line*
  8 P Ctl-Ins: ins space;  Esc-H: help
  9 P Ctl-BckSpc: del;  Esc-0: cold
 10 P Esc-R: rotate/sides;       ( / )
 11 P Esc-N: screen +1, no flush ( > )
 12 P Esc-L: screen -1, no flush ( < )
 13 P Esc-S: save (flush) ; Esc-B: 4th
 14 P Esc-Q: quit (empty-buf)
 15 P Esc-V: put last deleted line*

60 CLEAR
  0 P ( EDIT - BY M. DOUGHERTY )
  1 P : TASK ; DECIMAL 0 VARIABLE CLINE 0 VARIABLE CCHAR
  2 P 752 CONSTANT CRSINH             59 CONSTANT #HLP 
  3 P 3  VARIABLE LINEOFF              3 VARIABLE CHAROFF
  4 P 18 CONSTANT TOP-BOT              2 CONSTANT REDGE
  5 P 22 CONSTANT LEDGE                0 VARIABLE SIDE 
  6 P 17 VARIABLE EXTRAOFF             0 VARIABLE STOP
  7 P 0  VARIABLE SAV-BUF  64 ALLOT 
  8 P : EREAD 16 0 DO I SCR @ (LINE)   DROP
  9 P   UPDATE DROP LOOP 0 CLINE !
 10 P   0 CCHAR ! 0 SIDE ! ; 
 11 P : CLS 125 EMIT ; : ECLEAR CLS 1  CRSINH C! ; 
 12 P : POINT-CURSOR 85 ! 84 C! ;
 13 P : CURSOR@ CLINE @ LINEOFF @ +
 14 P   CCHAR @ SIDE @ IF 32 - ENDIF   CHAROFF @ + ;
 15 P : CURSOR CURSOR@ POINT-CURSOR ;  -->

61 CLEAR
  0 P ( EDIT - SCREEN-CURSOR, ... ) 
  1 P : SCREEN-CURSOR CURSOR@ SWAP 40 * + 106 C@ 256 *
  2 P  960 - + DUP C@ 128 XOR SWAP C! ;
  3 P : HLINE 34 0 DO TOP-BOT EMIT LOOP ;
  4 P : LADDR CLINE @ SCR @ (LINE) DROP
  5 P  SIDE @ IF 32 + ENDIF ;
  6 P : EADDR CLINE @ SCR @ (LINE) DROP
  7 P  SIDE @ 0= IF 32 + ENDIF ;
  8 P : ELINE LEDGE EMIT LADDR 32 TYPE REDGE EMIT ;
  9 P : XLINE LEDGE EMIT EADDR 32 TYPE REDGE EMIT ;
 10 P : WRITE-LINE CLINE @ LINEOFF @ + CHAROFF @ 1 -
 11 P  POINT-CURSOR ELINE ;
 12 P : WRITE-EXTRA EXTRAOFF @ LINEOFF @ + CHAROFF @ 1 -
 13 P  POINT-CURSOR XLINE ; : FRE 741 @ HERE - ;
 14 P : 2TOP LINEOFF @ 1 - CHAROFF @ 1 -
 15 P  POINT-CURSOR HLINE ;  -->

62 CLEAR 
  0 P ( EDIT - DISPLAY, CASE )
  1 P : BOT LINEOFF @ 16 + CHAROFF @ 1 -
  2 P  POINT-CURSOR HLINE ; 
  3 P : ETITLE 0 CHAROFF @ POINT-CURSOR
  4 P  ." EDIT / Dr" OFFSET @ 0= 0= . ." Scr" SCR ?
  5 P  ." Side" SIDE ? ." Free" FRE U. ; 
  6 P : DISPLAY ECLEAR ETITLE 2TOP CLINE @ 16 0 DO
  7 P  I CLINE ! WRITE-LINE LOOP CLINE !
  8 P  SIDE @ IF 32 ELSE 0 ENDIF CCHAR ! BOT
  9 P  WRITE-EXTRA CURSOR SCREEN-CURSOR ;
 10 P : CASES ?COMP CSP @ !CSP 4 ; IMMEDIATE
 11 P : CASE 4 ?PAIRS COMPILE OVER COMPILE =
 12 P  COMPILE 0BRANCH HERE 0 , COMPILE DROP 5 ; IMMEDIATE
 13 P : IS 5 ?PAIRS COMPILE BRANCH HERE 0 ,
 14 P  SWAP 2 [COMPILE] ENDIF 4 ; IMMEDIATE
 15 P : ANYK CR ." (Return)" KEY DROP ; -->

63 CLEAR
  0 P ( EDIT - CASE, MOVEMENT )
  1 P : CEND 4 ?PAIRS COMPILE DROP
  2 P   BEGIN SP@ CSP @ = 0= WHILE
  3 P   2 [COMPILE] ENDIF REPEAT
  4 P   CSP ! ; IMMEDIATE
  5 P : MOVE-RIGHT CCHAR @ 1 + SIDE @ IF
  6 P   DUP 64 = IF DROP 32 ENDIF ELSE
  7 P   DUP 32 = IF DROP 0  ENDIF ENDIF
  8 P   CCHAR ! ;
  9 P : RIGHT MOVE-RIGHT SCREEN-CURSOR ;
 10 P : RIGHT-CURSOR SCREEN-CURSOR RIGHT ;
 11 P : MOVE-LEFT CCHAR @ 1 - SIDE @ IF
 12 P  DUP 31 = IF DROP 63 ENDIF ELSE
 13 P  DUP -1 = IF DROP 31 ENDIF ENDIF
 14 P  CCHAR ! ; 
 15 P : LEFT MOVE-LEFT SCREEN-CURSOR ; -->

64 CLEAR 
 0 P ( EDIT - MOVEMENT, KEYJOY )
 1 P : LEFT-CURSOR SCREEN-CURSOR LEFT ;
 2 P : MOVE-UP CLINE @ 1 - 15 AND
 3 P   CLINE ! WRITE-EXTRA ;
 4 P : EUP MOVE-UP SCREEN-CURSOR ;
 5 P : UP-CURSOR SCREEN-CURSOR EUP ;
 6 P : MOVE-DOWN CLINE @ 1 + 15 AND
 7 P   CLINE ! WRITE-EXTRA ;
 8 P : DOWN MOVE-DOWN SCREEN-CURSOR ;
 9 P : DOWN-CURSOR SCREEN-CURSOR DOWN ;
10 P : RETURN SCREEN-CURSOR SIDE @ IF
11 P   32 ELSE 0 ENDIF CCHAR ! DOWN ;
12 P : EABORT EMPTY-BUFFERS 1 STOP ! ;
13 P : (KEYJOY) 632 C@ CASES 15 CASE KEY IS
14 P   11 CASE 30 IS 7 CASE 31 IS 14 CASE 28 IS 
15 P   13 CASE 29 IS CEND ( FIXME ) ; -->

65 CLEAR
 0 P ( EDIT - REFORTH, SCREEN<>, HLP )
 1 P : SH CLS 0 CRSINH C! IN @ >R BLK @ >R 0 IN ! 
 2 P   0 BLK ! CR QUERY INTERPRET R> BLK ! R> IN ! ANYK ; 
 3 P : ENEXT ( FLUSH ) SCR @ 1 + SCR ! EREAD DISPLAY ;
 4 P : ELAST ( FLUSH ) SCR @ 1 - SCR ! EREAD DISPLAY ;  
 5 P : ADDR CLINE @ SCR @ (LINE) DROP
 6 P   CCHAR @ + ; #HLP VARIABLE HLPM ( BEFORE HLP )
 7 P : ADDKEY DUP ADDR C! CURSOR EMIT RIGHT ;
 8 P : CHANGE-SIDE SIDE @ 1 XOR SIDE ! DISPLAY ;
 9 P : INSERT-CHAR ADDR SWAP CCHAR @ -
10 P   SWAP OVER + SWAP -DUP IF 0 DO
11 P   DUP 1 - C@ OVER C! 1 - LOOP
12 P   ENDIF BL SWAP C! ; : INSERT SIDE @ IF
13 P   63 ELSE 31 ENDIF INSERT-CHAR WRITE-LINE
14 P   CURSOR SCREEN-CURSOR ; : HLP SCR @ 70 = IF
15 P   HLPM @ SCR ! ELSE SCR @ HLPM ! #HLP SCR ! ENDIF ; -->

66 CLEAR
 0 P ( EDIT - DELETE, INSERT )
 1 P : DELETE-CHAR ADDR SWAP CCHAR @ -
 2 P   -DUP IF 0 DO DUP 1 + C@ OVER C!
 3 P   1 + LOOP ENDIF BL SWAP C! ;
 4 P : DELETE SIDE @ IF 63 ELSE 31 ENDIF
 5 P   DELETE-CHAR WRITE-LINE CURSOR SCREEN-CURSOR ;
 6 P : L-A SCR @ (LINE) DROP ;
 7 P : DELETE-L CLINE @ L-A SAV-BUF 64 CMOVE
 8 P   15 CLINE @ - IF 15 CLINE @ DO
 9 P   I 1+ L-A I L-A 64 CMOVE LOOP ENDIF
10 P   15 L-A 64 BLANKS ;
11 P : INSERT-L 15 CLINE @ - IF
12 P   CLINE @ 15 DO I 1 - L-A I L-A 64 CMOVE
13 P   -1 +LOOP ENDIF CLINE @ L-A 64 BLANKS ;
14 P : INSERT-LINE INSERT-L DISPLAY ;
15 P : DELETE-LINE DELETE-L DISPLAY ; -->

67 CLEAR 
 0 P ( EDIT - PUTLINE, TAB )
 1 P : PUT-LINE INSERT-L SAV-BUF CLINE @
 2 P   L-A 64 CMOVE DISPLAY ;
 3 P : TAB 2 0 DO RIGHT-CURSOR LOOP ;
 4 P : DEL LEFT-CURSOR BL DUP ADDR C!
 5 P   CURSOR EMIT SCREEN-CURSOR ;
 6 P : CLEAR-SCR 16 0 DO I L-A 64 BLANKS
 7 P   LOOP DISPLAY ; 
 8 P : UNDOSCR EMPTY-BUFFERS EREAD DISPLAY ;
 9 P : SAVESCR FLUSH EREAD DISPLAY ;
10 P : THEME 710 C@ 148 XOR 710 C! ; 
11 P ( TODO: Plugin mechanism / ?EXEC )
12 P   : PIN1 CLS VLIST DISPLAY ; 
13 P   : PIN2 CLS SCR @ LIST  ANYK DISPLAY ; 
14 P   : PIN3 CLS SCR @ TRIAD ANYK DISPLAY ; 
15 P -->
 
68 CLEAR
 0 P ( EDIT - COMMANDS )
 1 P : REVB 712 @ 128 XOR 712 ! ; ( CLR4 )
 2 P : ESC REVB KEY CASES        
 3 P   82 CASE CHANGE-SIDE IS ( R )   47 CASE CHANGE-SIDE IS ( / )
 4 P   78 CASE ENEXT       IS ( N )   62 CASE ENEXT IS ( > )
 5 P   76 CASE ELAST       IS ( L )   60 CASE ENEXT IS ( < )
 6 P   83 CASE SAVESCR     IS ( S )   49 CASE PIN1 IS ( 1 )           
 7 P   81 CASE EABORT      IS ( Q )   50 CASE PIN2 IS ( 2 )           
 8 P   86 CASE PUT-LINE    IS ( V )   51 CASE PIN3 IS ( 3 )           
 9 P   90 CASE UNDOSCR     IS ( Z )
10 P   66 CASE SH DISPLAY  IS ( B )   84 CASE THEME       IS ( T )   
11 P   48 CASE BOOT        IS ( 0 )   66 CASE SH DISPLAY  IS ( B )
12 P   72 CASE HLP DISPLAY IS ( H )          
13 P   BEEP CEND REVB ;
14 P : DEPTH SP@ 12 +ORIGIN @ SWAP - 2 / ;
15 P : SETSCR DEPTH 0= IF #HLP ENDIF SCR ! ;  -->
 
69 CLEAR
 0 P ( EDIT - ends ) ( n -- ) : EDIT 
 1 P   SETSCR EREAD DISPLAY 0 STOP ! BEGIN KEY
 2 P   CASES 27 CASE ESC IS 
 3 P   28 CASE UP-CURSOR IS
 4 P   29 CASE DOWN-CURSOR IS
 5 P   31 CASE RIGHT-CURSOR IS
 6 P   30 CASE LEFT-CURSOR IS
 7 P   155 CASE RETURN IS
 8 P   255 CASE INSERT IS
 9 P   254 CASE DELETE IS
10 P   157 CASE INSERT-LINE IS
11 P   156 CASE DELETE-LINE IS
12 P   126 CASE DEL IS 127 CASE TAB IS
13 P   125 CASE CLEAR-SCR IS 
14 P DUP ADDKEY CEND STOP @ UNTIL 
15 P 125 EMIT 0 CRSINH ! ; : /EDIT ; ;S
 
