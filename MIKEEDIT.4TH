
SCR # 60 
  0 ( EDIT BY M. DOUGHERTY, MICRO 57/FEB/83 )
  1 ( 18 LOAD 50 LOAD 60 LOAD n EDIT )
  2 0 VARIABLE CLINE 0 VARIABLE CCHAR
  3 3 VARIABLE LINEOFF 3 VARIABLE CHAROFF
  4 18 CONSTANT TOP-BOT 2 CONSTANT REDGE
  5 22 CONSTANT LEDGE 0 VARIABLE SIDE
  6 17 VARIABLE EXTRAOFF 0 VARIABLE STOP
  7  0 VARIABLE SAV-BUF 64 ALLOT
  8 : EREAD 16 0 DO I SCR @ (LINE) DROP
  9   UPDATE DROP LOOP 0 CLINE !
 10   0 CCHAR ! 0 SIDE ! ;
 11 : ECLEAR 125 EMIT 1 752 C! ;
 12 : POINT-CURSOR 85 ! 84 C! ;
 13 : CURSOR@ CLINE @ LINEOFF @ +
 14  CCHAR @ SIDE @ IF 32 - ENDIF CHAROFF @ + ;
 15 : CURSOR CURSOR@ POINT-CURSOR ; -->

SCR # 61 
  0 ( EDIT )
  1 : SCREEN-CURSOR CURSOR@ SWAP 40 * + 106 C@ 256 *
  2  960 - + DUP C@ 128 XOR SWAP C! ;
  3 : HLINE 34 0 DO TOP-BOT EMIT LOOP ;
  4 : LADDR CLINE @ SCR @ (LINE) DROP
  5  SIDE @ IF 32 + ENDIF ;
  6 : EADDR CLINE @ SCR @ (LINE) DROP
  7  SIDE @ 0= IF 32 + ENDIF ;
  8 : ELINE LEDGE EMIT LADDR 32 TYPE REDGE EMIT ;
  9 : XLINE LEDGE EMIT EADDR 32 TYPE REDGE EMIT ;
 10 : WRITE-LINE CLINE @ LINEOFF @ + CHAROFF @ 1 -
 11  POINT-CURSOR ELINE ;
 12 : WRITE-EXTRA EXTRAOFF @ LINEOFF @ + CHAROFF @ 1 -
 13  POINT-CURSOR XLINE ;
 14 : TOP LINEOFF @ 1 - CHAROFF @ 1 -
 15  POINT-CURSOR HLINE ;  -->

SCR # 62 
  0 ( EDIT )
  1 : BOT LINEOFF @ 16 + CHAROFF @ 1 -
  2  POINT-CURSOR HLINE ;
  3 : ETITLE 0 CHAROFF @ POINT-CURSOR
  4  ." Screen: " SCR ? 1 CHAROFF @ POINT-CURSOR
  5  ." Side:   " SIDE ? ;
  6 : DISPLAY ECLEAR ETITLE TOP CLINE @ 16 0 DO
  7  I CLINE ! WRITE-LINE LOOP CLINE !
  8  SIDE @ IF 32 ELSE 0 ENDIF CCHAR ! BOT
  9  WRITE-EXTRA CURSOR SCREEN-CURSOR ;
 10 : DOCASE ?COMP CSP @ !CSP 4 ; IMMEDIATE
 11 : CASE 4 ?PAIRS COMPILE OVER COMPILE =
 12  COMPILE 0BRANCH HERE 0 , COMPILE DROP 5 ; IMMEDIATE
 13 : ENDCASE 5 ?PAIRS COMPILE BRANCH HERE 0 ,
 14  SWAP 2 [COMPILE] ENDIF 4 ; IMMEDIATE
 15 -->

SCR # 63 
  0 ( EDIT )
  1 : ENDCASES 4 ?PAIRS COMPILE DROP
  2   BEGIN SP@ CSP @ = 0= WHILE
  3   2 [COMPILE] ENDIF REPEAT
  4   CSP ! ; IMMEDIATE
  5 : MOVE-RIGHT CCHAR @ 1 + SIDE @ IF
  6   DUP 64 = IF DROP 32 ENDIF ELSE
  7   DUP 32 = IF DROP 0  ENDIF ENDIF
  8   CCHAR ! ;
  9 : RIGHT MOVE-RIGHT SCREEN-CURSOR ;
 10 : RIGHT-CURSOR SCREEN-CURSOR RIGHT ;
 11 : MOVE-LEFT CCHAR @ 1 - SIDE @ IF
 12  DUP 31 = IF DROP 63 ENDIF ELSE
 13  DUP -1 = IF DROP 31 ENDIF ENDIF
 14  CCHAR ! ;
 15 : LEFT MOVE-LEFT SCREEN-CURSOR ; -->

SCR # 64 
  0 ( EDIT )
  1 : LEFT-CURSOR SCREEN-CURSOR LEFT ;
  2 : MOVE-UP CLINE @ 1 - 15 AND
  3  CLINE ! WRITE-EXTRA ;
  4 : EUP MOVE-UP SCREEN-CURSOR ;
  5 : UP-CURSOR SCREEN-CURSOR EUP ;
  6 : MOVE-DOWN CLINE @ 1 + 15 AND
  7  CLINE ! WRITE-EXTRA ;
  8 : DOWN MOVE-DOWN SCREEN-CURSOR ;
  9 : DOWN-CURSOR SCREEN-CURSOR DOWN ;
 10 : RETURN SCREEN-CURSOR SIDE @ IF
 11  32 ELSE 0 ENDIF CCHAR ! DOWN ;
 12 : EXIT FLUSH 1 STOP ! ;
 13 : EABORT EMPTY-BUFFERS 1 STOP ! ;
 14 -->
 15 

SCR # 65 
  0 ( EDIT )
  1 : ENEXT FLUSH SCR @ 1 + SCR !
  2   EREAD DISPLAY ;
  3 : ELAST FLUSH SCR @ 1 - SCR !
  4   EREAD DISPLAY ;
  5 : ADDR CLINE @ SCR @ (LINE) DROP
  6   CCHAR @ + ;
  7 : ADDKEY DUP ADDR C! CURSOR EMIT RIGHT ;
  8 : CHANGE-SIDE SIDE @ 1 XOR SIDE ! DISPLAY ;
  9 : INSERT-CHAR ADDR SWAP CCHAR @ -
 10   SWAP OVER + SWAP -DUP IF 0 DO
 11   DUP 1 - C@ OVER C! 1 - LOOP
 12   ENDIF BL SWAP C! ;
 13 : INSERT SIDE @ IF 63 ELSE 31 ENDIF
 14   INSERT-CHAR WRITE-LINE CURSOR SCREEN-CURSOR ;
 15 -->

SCR # 66 
  0 ( EDIT )
  1 : DELETE-CHAR ADDR SWAP CCHAR @ -
  2   -DUP IF 0 DO DUP 1 + C@ OVER C!
  3   1 + LOOP ENDIF BL SWAP C! ;
  4 : DELETE SIDE @ IF 63 ELSE 31 ENDIF
  5   DELETE-CHAR WRITE-LINE CURSOR SCREEN-CURSOR ;
  6 : L-A SCR @ (LINE) DROP ;
  7 : DELETE-L CLINE @ L-A SAV-BUF 64 CMOVE
  8   15 CLINE @ - IF 15 CLINE @ DO
  9   I 1+ L-A I L-A 64 CMOVE LOOP ENDIF
 10   15 L-A 64 BLANKS ;
 11 : INSERT-L 15 CLINE @ - IF
 12   CLINE @ 15 DO I 1 - L-A I L-A 64 CMOVE
 13   -1 +LOOP ENDIF CLINE @ L-A 64 BLANKS ;
 14 : INSERT-LINE INSERT-L DISPLAY ;
 15 : DELETE-LINE DELETE-L DISPLAY ; -->

SCR # 67 
  0 ( EDIT )
  1 : PUT-LINE INSERT-L SAV-BUF CLINE @
  2   L-A 64 CMOVE DISPLAY ;
  3 : TAB 2 0 DO RIGHT-CURSOR LOOP ;
  4 : DEL LEFT-CURSOR BL DUP ADDR C!
  5   CURSOR EMIT SCREEN-CURSOR ;
  6 : CLEAR-SCR 16 0 DO I L-A 64 BLANKS
  7   LOOP DISPLAY ;
  8 
  9 
 10 
 11 
 12 
 13 
 14 
 15 -->

SCR # 68 
  0 ( EDIT )
  1 : REVB 712 @ 255 XOR 712 ! ;
  2 : ESC REVB KEY DOCASE
  3   83 CASE CHANGE-SIDE ENDCASE
  4   78 CASE ENEXT       ENDCASE
  5   76 CASE ELAST       ENDCASE
  6   69 CASE EXIT        ENDCASE
  7   65 CASE EABORT      ENDCASE
  8   80 CASE PUT-LINE    ENDCASE
  9   84 CASE EMPTY-BUFFERS
 10           DISPLAY     ENDCASE
 11   BEEP ENDCASES REVB ;
 12 
 13 
 14 
 15 -->

SCR # 69 
  0 ( EDIT ENDS )
  1 : EDIT SCR ! EREAD DISPLAY 0 STOP ! BEGIN
  2 KEY DOCASE 28 CASE UP-CURSOR ENDCASE
  3 29 CASE DOWN-CURSOR ENDCASE
  4 31 CASE RIGHT-CURSOR ENDCASE
  5 30 CASE LEFT-CURSOR ENDCASE
  6 155 CASE RETURN ENDCASE
  7 255 CASE INSERT ENDCASE
  8 254 CASE DELETE ENDCASE
  9 157 CASE INSERT-LINE ENDCASE 156 CASE DELETE-LINE ENDCASE
 10 126 CASE DEL ENDCASE 127 CASE TAB ENDCASE
 11 125 CASE CLEAR-SCR ENDCASE 27 CASE ESC ENDCASE
 12 DUP ADDKEY ENDCASES
 13 STOP @ UNTIL 125 EMIT ;
 14 
 15 ;S

